// Code generated by Netspective IGS. DO NOT EDIT.

@startuml igs.test
  hide circle
  skinparam linetype ortho
  skinparam roundcorner 20
  skinparam class {
    BackgroundColor White
    ArrowColor Silver
    BorderColor Silver
    FontColor Black
    FontSize 12
  }

  entity "party" as party {
    * **id**: UUID
    --
    * party_name: VARCHAR(255)
    * party_type_id: INTEGER <<ENUM(party_type)>> 
    * party_uuid: UUID
    --
    identifiers: PartyIdentifier[]
    relatedParties: PartyRelation[]
  }
  entity "party_identifier" as party_identifier {
    * **id**: UUID
    --
    * party_id: UUID <<FK(party)>>
    * identifier_name: VARCHAR(255)
    * identifier_value: VARCHAR(255)
    * party_identifier_source_id: INTEGER <<ENUM(party_identifier_source)>> 
  }
  entity "party_relation" as party_relation {
    * **id**: UUID
    --
    * origin_party_id: UUID <<FK(party)>>
    * related_party_id: UUID <<FK(party)>>
    * party_relation_type_id: INTEGER <<ENUM(party_relation_type)>> 
  }
  entity "organization" as organization {
    * **id**: UUID <<FK(party)>>
    --
    * organization_type_id: UUID <<ENUM(organization_type)>> 
     parent_org_id: UUID <<SELF>>
    * org_name: VARCHAR(255)
  }
  entity "person" as person {
    * **id**: UUID <<FK(party)>>
    --
    * person_type_id: INTEGER <<ENUM(person_type)>> 
    * person_fname: VARCHAR(255)
    * person_mname: VARCHAR(255)
    * person_lname: VARCHAR(255)
    * person_gender_id: INTEGER <<ENUM(person_gender)>> 
    * dob: TIMESTAMPTZ
  }
  entity "contact_electronic" as contact_electronic {
    * **id**: UUID
    --
    * electronic_details: VARCHAR(255)
    * contact_type_id: INTEGER <<ENUM(contact_type)>> 
    * party_id: UUID <<FK(party)>>
  }
  entity "contact_land" as contact_land {
    * **id**: UUID
    --
    * address_line1: VARCHAR(255)
    * address_line2: VARCHAR(255)
    * address_zip: VARCHAR(255)
    * address_city: VARCHAR(255)
    * address_state: VARCHAR(255)
    * address_country: VARCHAR(255)
    * contact_type_id: INTEGER <<ENUM(contact_type)>> 
    * party_id: UUID <<FK(party)>>
  }
  entity "contact_tele" as contact_tele {
    * **id**: UUID
    --
    * number: VARCHAR(255)
    * contact_type_id: INTEGER <<ENUM(contact_type)>> 
    * party_id: UUID <<FK(party)>>
  }
  entity "account" as account {
    * **id**: UUID
    --
    * account_type_id: INTEGER <<ENUM(account_type)>> 
    * account_name: VARCHAR(255)
    --
    identifiers: AccountIdentifier[]
  }
  entity "account_identifier" as account_identifier {
    * **id**: UUID
    --
    * account_id: UUID <<FK(account)>>
    * identifier_name: VARCHAR(255)
    * identifier_value: VARCHAR(255)
    * identifier_value_encrypted: VARCHAR(255)
    * account_auth_type_id: INTEGER <<ENUM(account_auth_type)>> 
  }
  entity "configuration_scope" as configuration_scope {
    * **id**: UUID
    --
    * code: VARCHAR(255)
    * value: VARCHAR(255)
    * description: VARCHAR(255)
    * hierarchy_level: INTEGER
  }
  entity "master_configuration" as master_configuration {
    * **id**: UUID
    --
    * configuration_scope_id: UUID <<FK(configuration_scope)>>
    * name: VARCHAR(255)
    * description: VARCHAR(255)
    * default_value: VARCHAR(255)
    * short_key: VARCHAR(255)
    * config_type: VARCHAR(255)
  }
  entity "configuration_value" as configuration_value {
    * **id**: UUID
    --
    * party_id: UUID <<FK(party)>>
    * master_configuration_id: UUID <<FK(master_configuration)>>
    * value: JSON
    * is_multivalue: BOOLEAN
    * nameas: VARCHAR(255)
    * description: VARCHAR(255)
  }
  entity "configuration_master_options" as configuration_master_options {
    * **id**: UUID
    --
    * name: VARCHAR(255)
    * description: VARCHAR(255)
    * type: VARCHAR(255)
  }
  entity "configuration_feature_flag" as configuration_feature_flag {
    * **id**: UUID
    --
    * party_id: UUID <<FK(party)>>
    * configuration_master_options_id: UUID <<FK(configuration_master_options)>>
    * master_configuration_id: UUID <<FK(master_configuration)>>
  }
  entity "plpgsql_check_result" as plpgsql_check_result {
    * **id**: UUID
    --
     function_id: VARCHAR(255)
     line_no: INTEGER
     statement: VARCHAR(3000)
     sql_state: VARCHAR(255)
     message: VARCHAR(3000)
     detail: VARCHAR(3000)
     hint: VARCHAR(255)
     level: VARCHAR(255)
     position: VARCHAR(255)
     query: VARCHAR(3000)
     context: VARCHAR(255)
  }

  party |o..o| party_identifier
  party |o..o| party_relation
  party |o..o| party_relation
  party |o..o| contact_electronic
  party |o..o| contact_tele
  party |o..o| contact_land
  party |o..o| organization
  party |o..o| person
  party |o..o| configuration_value
  party |o..o| configuration_feature_flag
  account |o..o| account_identifier
  configuration_scope |o..o| master_configuration
  master_configuration |o..o| configuration_value
  master_configuration |o..o| configuration_feature_flag
  configuration_master_options |o..o| configuration_feature_flag
@enduml