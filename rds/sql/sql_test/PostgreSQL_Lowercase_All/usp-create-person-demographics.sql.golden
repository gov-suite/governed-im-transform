-- Code generated by Netspective IGS. DO NOT EDIT.

DROP PROCEDURE IF EXISTS usp_create_person_demographics(TEXT, TEXT, TEXT, TEXT, TIMESTAMPTZ, INTEGER, INTEGER, TEXT, TEXT, TEXT, TEXT, TEXT, TEXT, TEXT, INTEGER);
CREATE OR REPLACE PROCEDURE usp_create_person_demographics(IN first_name TEXT, IN middle_name TEXT, IN last_name TEXT, IN email TEXT, IN dob TIMESTAMPTZ, IN gender INTEGER, IN person_type INTEGER, IN phone TEXT, IN address_line1 TEXT, IN address_line2 TEXT, IN city TEXT, IN state TEXT, IN country TEXT, IN zip_code TEXT, INOUT party_id INTEGER)
LANGUAGE 'plpgsql'
AS $BODY$
  
    
    DECLARE
    BEGIN
        INSERT INTO party (party_name, party_type_id)
            VALUES (first_name, (
                    SELECT
                    party_type_id
                    FROM
                        party_type
                    WHERE
                    code = 'PERSON'))
        RETURNING
            id INTO party_id;

        INSERT INTO person(
          party_id, person_type_id, person_fname, person_mname, person_lname, record_status_id,dob, person_gender_id)
              VALUES (party_id, person_type, first_name, middle_name, last_name, 1,  dob, gender);
              
        INSERT INTO contact_land (address_line1, address_line2, address_zip, address_city, address_state, address_country, contact_type_id, party_id, record_status_id)
            VALUES (address_line1, address_line2, zip_code, city, state, country,  (SELECT
              contact_type_id
            FROM
                contact_type
            WHERE
            code = 'LAND'), party_id, 1);
    
        INSERT INTO contact_tele (number,contact_type_id, party_id, record_status_id)
            VALUES (phone, (SELECT
              contact_type_id
            FROM
                contact_type
            WHERE
            code = 'CALL'), party_id, 1);
    
        INSERT INTO contact_electronic (electronic_details, contact_type_id, party_id, record_status_id)
            VALUES (email, (SELECT
              contact_type_id
            FROM
                contact_type
            WHERE
            code = 'EMAIL'), party_id, 1);
    
    END;


  $BODY$;
  -- ALTER PROCEDURE usp_create_person_demographics(TEXT, TEXT, TEXT, TEXT, TIMESTAMPTZ, INTEGER, INTEGER, TEXT, TEXT, TEXT, TEXT, TEXT, TEXT, TEXT, INTEGER) OWNER TO (TODO: OWNER);

DROP FUNCTION IF EXISTS usp_create_person_demographics_wf(TEXT,TEXT,TEXT,TEXT,TIMESTAMPTZ,INTEGER,INTEGER,TEXT,TEXT,TEXT,TEXT,TEXT,TEXT,TEXT,INTEGER);
CREATE OR REPLACE FUNCTION usp_create_person_demographics_wf(IN first_name TEXT,IN middle_name TEXT,IN last_name TEXT,IN email TEXT,IN dob TIMESTAMPTZ,IN gender INTEGER,IN person_type INTEGER,IN phone TEXT,IN address_line1 TEXT,IN address_line2 TEXT,IN city TEXT,IN state TEXT,IN country TEXT,IN zip_code TEXT,INOUT party_id INTEGER)
RETURNS INTEGER
LANGUAGE 'plpgsql'
COST 100 VOLATILE
AS $BODY$
  BEGIN
    CALL  usp_create_person_demographics(first_name,middle_name,last_name,email,dob,gender,person_type,phone,address_line1,address_line2,city,state,country,zip_code,party_id) ;
  END;
$BODY$;
-- ALTER FUNCTION usp_create_person_demographics_wf(TEXT,TEXT,TEXT,TEXT,TIMESTAMPTZ,INTEGER,INTEGER,TEXT,TEXT,TEXT,TEXT,TEXT,TEXT,TEXT,INTEGER) OWNER TO (TODO: OWNER);
